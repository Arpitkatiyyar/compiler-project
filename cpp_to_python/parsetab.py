
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN COUT DIV ELSE EQ FLOAT FOR GT ID IF INCLUDE INT LBRACE LPAREN LT MAIN MINUS MOD MULT NAMESPACE NEQ NUMBER PLUS RBRACE RPAREN SEMICOLON STD STRING STRING_LITERAL USING WHILEprogram : includes using_namespace main_functionincludes : INCLUDE\n                | emptyusing_namespace : USING NAMESPACE STD SEMICOLON\n                       | emptymain_function : INT MAIN LPAREN RPAREN blockblock : LBRACE statement_list RBRACEstatement_list : statement\n                      | statement_list statementstatement : INT ID ASSIGN expression SEMICOLON\n                 | FLOAT ID ASSIGN expression SEMICOLON\n                 | STRING ID ASSIGN STRING_LITERAL SEMICOLONstatement : ID ASSIGN expression SEMICOLONstatement : COUT LT LT expression SEMICOLONstatement : IF LPAREN expression RPAREN statement\n                 | IF LPAREN expression RPAREN statement ELSE statementstatement : WHILE LPAREN expression RPAREN statementstatement : FOR LPAREN INT ID ASSIGN expression SEMICOLON expression SEMICOLON assignment RPAREN statementstatement : blockassignment : ID ASSIGN expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULT expression\n                  | expression DIV expression\n                  | expression MOD expression\n                  | expression LT expression\n                  | expression GT expression\n                  | expression EQ expression\n                  | expression NEQ expressionexpression : NUMBERexpression : IDexpression : LPAREN expression RPARENexpression : STRING_LITERALempty :'
    
_lr_action_items = {'INCLUDE':([0,],[3,]),'USING':([0,2,3,4,],[-34,6,-2,-3,]),'INT':([0,2,3,4,5,7,14,17,18,19,28,29,30,38,52,66,67,69,80,81,82,83,84,86,88,95,97,],[-34,-34,-2,-3,9,-5,-4,20,20,-8,-19,-7,-9,50,-13,20,20,-10,-11,-12,-14,-15,-17,20,-16,20,-18,]),'$end':([1,8,16,29,],[0,-1,-6,-7,]),'NAMESPACE':([6,],[10,]),'MAIN':([9,],[11,]),'STD':([10,],[12,]),'LPAREN':([11,25,26,27,32,36,37,39,43,45,47,53,54,55,56,57,58,59,60,61,85,89,94,],[13,36,37,38,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'SEMICOLON':([12,40,41,42,44,51,63,64,65,70,71,72,73,74,75,76,77,78,79,87,90,],[14,-31,52,-30,-33,69,80,81,82,-21,-22,-23,-24,-25,-26,-27,-28,-29,-32,89,91,]),'RPAREN':([13,40,42,44,48,49,62,70,71,72,73,74,75,76,77,78,79,93,96,],[15,-31,-30,-33,66,67,79,-21,-22,-23,-24,-25,-26,-27,-28,-29,-32,95,-20,]),'LBRACE':([15,17,18,19,28,29,30,52,66,67,69,80,81,82,83,84,86,88,95,97,],[17,17,17,-8,-19,-7,-9,-13,17,17,-10,-11,-12,-14,-15,-17,17,-16,17,-18,]),'FLOAT':([17,18,19,28,29,30,52,66,67,69,80,81,82,83,84,86,88,95,97,],[22,22,-8,-19,-7,-9,-13,22,22,-10,-11,-12,-14,-15,-17,22,-16,22,-18,]),'STRING':([17,18,19,28,29,30,52,66,67,69,80,81,82,83,84,86,88,95,97,],[23,23,-8,-19,-7,-9,-13,23,23,-10,-11,-12,-14,-15,-17,23,-16,23,-18,]),'ID':([17,18,19,20,22,23,28,29,30,32,36,37,39,43,45,47,50,52,53,54,55,56,57,58,59,60,61,66,67,69,80,81,82,83,84,85,86,88,89,91,94,95,97,],[21,21,-8,31,33,34,-19,-7,-9,40,40,40,40,40,40,40,68,-13,40,40,40,40,40,40,40,40,40,21,21,-10,-11,-12,-14,-15,-17,40,21,-16,40,92,40,21,-18,]),'COUT':([17,18,19,28,29,30,52,66,67,69,80,81,82,83,84,86,88,95,97,],[24,24,-8,-19,-7,-9,-13,24,24,-10,-11,-12,-14,-15,-17,24,-16,24,-18,]),'IF':([17,18,19,28,29,30,52,66,67,69,80,81,82,83,84,86,88,95,97,],[25,25,-8,-19,-7,-9,-13,25,25,-10,-11,-12,-14,-15,-17,25,-16,25,-18,]),'WHILE':([17,18,19,28,29,30,52,66,67,69,80,81,82,83,84,86,88,95,97,],[26,26,-8,-19,-7,-9,-13,26,26,-10,-11,-12,-14,-15,-17,26,-16,26,-18,]),'FOR':([17,18,19,28,29,30,52,66,67,69,80,81,82,83,84,86,88,95,97,],[27,27,-8,-19,-7,-9,-13,27,27,-10,-11,-12,-14,-15,-17,27,-16,27,-18,]),'RBRACE':([18,19,28,29,30,52,69,80,81,82,83,84,88,97,],[29,-8,-19,-7,-9,-13,-10,-11,-12,-14,-15,-17,-16,-18,]),'ASSIGN':([21,31,33,34,68,92,],[32,39,45,46,85,94,]),'LT':([24,35,40,41,42,44,48,49,51,62,63,65,70,71,72,73,74,75,76,77,78,79,87,90,96,],[35,47,-31,58,-30,-33,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-32,58,58,58,]),'ELSE':([28,29,52,69,80,81,82,83,84,88,97,],[-19,-7,-13,-10,-11,-12,-14,86,-17,-16,-18,]),'NUMBER':([32,36,37,39,43,45,47,53,54,55,56,57,58,59,60,61,85,89,94,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'STRING_LITERAL':([32,36,37,39,43,45,46,47,53,54,55,56,57,58,59,60,61,85,89,94,],[44,44,44,44,44,44,64,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'PLUS':([40,41,42,44,48,49,51,62,63,65,70,71,72,73,74,75,76,77,78,79,87,90,96,],[-31,53,-30,-33,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-32,53,53,53,]),'MINUS':([40,41,42,44,48,49,51,62,63,65,70,71,72,73,74,75,76,77,78,79,87,90,96,],[-31,54,-30,-33,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-32,54,54,54,]),'MULT':([40,41,42,44,48,49,51,62,63,65,70,71,72,73,74,75,76,77,78,79,87,90,96,],[-31,55,-30,-33,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-32,55,55,55,]),'DIV':([40,41,42,44,48,49,51,62,63,65,70,71,72,73,74,75,76,77,78,79,87,90,96,],[-31,56,-30,-33,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-32,56,56,56,]),'MOD':([40,41,42,44,48,49,51,62,63,65,70,71,72,73,74,75,76,77,78,79,87,90,96,],[-31,57,-30,-33,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-32,57,57,57,]),'GT':([40,41,42,44,48,49,51,62,63,65,70,71,72,73,74,75,76,77,78,79,87,90,96,],[-31,59,-30,-33,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-32,59,59,59,]),'EQ':([40,41,42,44,48,49,51,62,63,65,70,71,72,73,74,75,76,77,78,79,87,90,96,],[-31,60,-30,-33,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-32,60,60,60,]),'NEQ':([40,41,42,44,48,49,51,62,63,65,70,71,72,73,74,75,76,77,78,79,87,90,96,],[-31,61,-30,-33,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-32,61,61,61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'includes':([0,],[2,]),'empty':([0,2,],[4,7,]),'using_namespace':([2,],[5,]),'main_function':([5,],[8,]),'block':([15,17,18,66,67,86,95,],[16,28,28,28,28,28,28,]),'statement_list':([17,],[18,]),'statement':([17,18,66,67,86,95,],[19,30,83,84,88,97,]),'expression':([32,36,37,39,43,45,47,53,54,55,56,57,58,59,60,61,85,89,94,],[41,48,49,51,62,63,65,70,71,72,73,74,75,76,77,78,87,90,96,]),'assignment':([91,],[93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> includes using_namespace main_function','program',3,'p_program','parser.py',9),
  ('includes -> INCLUDE','includes',1,'p_includes','parser.py',13),
  ('includes -> empty','includes',1,'p_includes','parser.py',14),
  ('using_namespace -> USING NAMESPACE STD SEMICOLON','using_namespace',4,'p_using_namespace','parser.py',18),
  ('using_namespace -> empty','using_namespace',1,'p_using_namespace','parser.py',19),
  ('main_function -> INT MAIN LPAREN RPAREN block','main_function',5,'p_main_function','parser.py',23),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','parser.py',30),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',35),
  ('statement -> INT ID ASSIGN expression SEMICOLON','statement',5,'p_statement_declaration','parser.py',45),
  ('statement -> FLOAT ID ASSIGN expression SEMICOLON','statement',5,'p_statement_declaration','parser.py',46),
  ('statement -> STRING ID ASSIGN STRING_LITERAL SEMICOLON','statement',5,'p_statement_declaration','parser.py',47),
  ('statement -> ID ASSIGN expression SEMICOLON','statement',4,'p_statement_assignment','parser.py',54),
  ('statement -> COUT LT LT expression SEMICOLON','statement',5,'p_statement_print','parser.py',58),
  ('statement -> IF LPAREN expression RPAREN statement','statement',5,'p_statement_if','parser.py',62),
  ('statement -> IF LPAREN expression RPAREN statement ELSE statement','statement',7,'p_statement_if','parser.py',63),
  ('statement -> WHILE LPAREN expression RPAREN statement','statement',5,'p_statement_while','parser.py',70),
  ('statement -> FOR LPAREN INT ID ASSIGN expression SEMICOLON expression SEMICOLON assignment RPAREN statement','statement',12,'p_statement_for','parser.py',74),
  ('statement -> block','statement',1,'p_statement_block','parser.py',82),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','parser.py',89),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',96),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',97),
  ('expression -> expression MULT expression','expression',3,'p_expression_binop','parser.py',98),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','parser.py',99),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','parser.py',100),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser.py',101),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','parser.py',102),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','parser.py',103),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binop','parser.py',104),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_var','parser.py',112),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','parser.py',116),
  ('expression -> STRING_LITERAL','expression',1,'p_expression_string','parser.py',120),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',127),
]
